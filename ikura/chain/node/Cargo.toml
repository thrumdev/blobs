[package]
name = "ikura-node"
version = "0.1.0"
description = "A new Cumulus FRAME-based Substrate Node, ready for hacking together a parachain."
build = "build.rs"
authors.workspace = true
homepage.workspace = true
repository.workspace = true
license.workspace = true
edition.workspace = true

[dependencies]
# This is the only dependency not inherited from the workspace
# because the node requires an older version of jsonrpsee
# compared to the one used by the shim
jsonrpsee = { version = "0.16.2", features = ["server"] }

parity-scale-codec = { workspace = true }
anyhow = { workspace = true }
async-trait = { workspace = true }
log = { workspace = true }
clap = { workspace = true, features = ["derive"] }
serde = { workspace = true, features = ["derive"] }
futures = { workspace = true }
serde_json = { workspace = true }

# Local
ikura-test-runtime = { workspace = true }
ikura-kusama-runtime = { workspace = true }
ikura-primitives = { workspace = true, default-features = true }

# Substrate
frame-benchmarking = { workspace = true, default-features = true }
frame-benchmarking-cli = { workspace = true }
pallet-transaction-payment-rpc = { workspace = true }
sc-basic-authorship = { workspace = true }
sc-chain-spec = { workspace = true }
sc-cli = { workspace = true }
sc-client-api = { workspace = true }
sc-client-db = { workspace = true }
sc-consensus = { workspace = true }
sc-executor = { workspace = true }
sc-network = { workspace = true }
sc-network-sync = { workspace = true }
sc-offchain = { workspace = true }
sc-rpc = { workspace = true }
sc-service = { workspace = true }
sc-sysinfo = { workspace = true }
sc-telemetry = { workspace = true }
sc-tracing = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sp-api = { workspace = true, default-features = true }
sp-block-builder = { workspace = true, default-features = true }
sp-blockchain = { workspace = true }
sp-consensus = { workspace = true }
sp-consensus-aura = { workspace = true, default-features = true }
sp-core = { workspace = true, default-features = false }
sp-keystore = { workspace = true }
sp-io = { workspace = true, default-features = false }
sp-inherents = { workspace = true, default-features = true }
sp-runtime = { workspace = true, default-features = false }
sp-session = { workspace = true, default-features = true }
sp-storage = { workspace = true, default-features = true }
sp-timestamp = { workspace = true }
sp-transaction-pool = { workspace = true, default-features = true }
substrate-frame-rpc-system = { workspace = true }
substrate-prometheus-endpoint = { workspace = true }
try-runtime-cli = { workspace = true, optional = true }

# Polkadot
polkadot-cli = { workspace = true }
polkadot-primitives = { workspace = true, default-features = true }
xcm = { workspace = true }

# Cumulus
cumulus-client-cli = { workspace = true }
cumulus-client-collator = { workspace = true }
cumulus-client-consensus-aura = { workspace = true }
cumulus-client-consensus-common = { workspace = true }
cumulus-client-consensus-proposer = { workspace = true }
cumulus-client-service = { workspace = true }
cumulus-primitives-core = { workspace = true, default-features = true }
cumulus-primitives-parachain-inherent = { workspace = true }
cumulus-relay-chain-interface = { workspace = true }
color-print = { workspace = true }
cumulus-pallet-parachain-system = { workspace = true, default-features = true }

[build-dependencies]
substrate-build-script-utils = { workspace = true }

[features]
default = []
runtime-benchmarks = [
	"frame-benchmarking-cli/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"ikura-test-runtime/runtime-benchmarks",
	"polkadot-cli/runtime-benchmarks",
	"polkadot-primitives/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]
try-runtime = [
	"ikura-test-runtime/try-runtime",
	"polkadot-cli/try-runtime",
	"sp-runtime/try-runtime",
]
